import requests
import time

import logger as log

from database import db

from tg_methods import send_message_tg

AFFISE_API_KEY = '1472b075254d6df44e295b3912665295'
OFFER_BLACK_LIST = [686, 1486, 848, 1299, 1370, 1421, 1527, 1586, 1553, 1460]

FROD_MSG = """
 üöØ–û–±—Ä–∞—â–∞—é –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —É –Ω–∞—Å –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –≥–ª—É–±–æ–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ—Ä–æ–¥ –∏ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫. –ù–∞–¥–µ—é—Å—å –Ω–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ –ø–ª–æ–¥–æ—Ç–≤–æ—Ä–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æüòâ
 """

ABOUT_LIMIT = """
[–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –ª–∏–º–∏—Ç –≤ 100 –∫–æ–Ω–≤–µ—Ä—Å–∏–π](https://docs.google.com/document/d/1FqOnKFEzHI7SvmyVSloW78ehxLy6MctDqFpminFCUHo/edit?usp=sharing)
"""

def tg_send_info(ticket, good_connect_offers_list, frod_msg: bool):
    msg_title = f"–ü–∞—Ä—Ç–Ω–µ—Ä—É {ticket['partner']} –ø–æ–¥–∫–ª—é—á–∏–ª–∏ –æ—Ñ—Ñ–µ—Ä—ã:"
    if frod_msg is True:
        frod_msg = FROD_MSG
    else:
        frod_msg = ""
    offers_msg = msg_title + '\n \nüëâ' + '\n \nüëâ'.join(good_connect_offers_list) + '\n \n' + '–ù–∞ –∫–∞–∂–¥—ã–π –æ—Ñ—Ñ–µ—Ä —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –ª–∏–º–∏—Ç 100 –∫–æ–Ω–≤–µ—Ä—Å–∏–π' + '\n' + frod_msg + '\n' + ABOUT_LIMIT
    send_message_tg(offers_msg)

def approve_tickets(ticket_list):
    if ticket_list is None:
        log.msg.info(f'–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤')
        return None
    try:
        for ticket in ticket_list:
            time.sleep(1)
            log.msg.info(f"–ü–∞—Ä—Ç–Ω–µ—Ä {ticket['partner']} –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å –æ—Ñ—Ñ–µ—Ä—ã")
            good_connect_offers_list = []
            if len(ticket['offers_list']) > 10:
                log.msg.info(f"–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ñ—Ñ–µ—Ä–æ–≤ –∑–∞ —Ä–∞–∑. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–µ–±–∞ {ticket['partner']}")
                continue
            for offer in ticket['offers_list']:
                if offer['offer_id'] in OFFER_BLACK_LIST:
                    log.msg.info(f"–ü–∞—Ä—Ç–Ω–µ—Ä {ticket['partner']} : –¢–∏–∫–µ—Ç {offer['ticket_id']} : –û—Ñ—Ñ–µ—Ä {offer['offer_id']} –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–ª–µ–∫ –ª–∏—Å—Ç–µ")
                    continue
                log.msg.info(f"–ü–∞—Ä—Ç–Ω–µ—Ä {ticket['partner']}: –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å –æ—Ñ—Ñ–µ—Ä {offer['offer_id']} –≤ —Ç–∏–∫–µ—Ç–µ {offer['ticket_id']}" )
                params = {'do': 'approve'}
                url = f"https://api-lead-magnet.affise.com/3.0/admin/ticket/{offer['ticket_id']}/offer"
                headers = {'API-Key': AFFISE_API_KEY}
                r = requests.post(url, headers=headers, data=params)
                res = r.json()
                if res['status'] == 1:
                    good_connect_offers_list.append(f"[{offer['offer_title'].replace('[', '(').replace(']', ')')}](https://lead-magnet.affise.com/v2/offer/{offer['offer_id']}/general)")
                    log.msg.info(f"–ü–∞—Ä—Ç–Ω–µ—Ä {ticket['partner']}: –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏ –æ—Ñ—Ñ–µ—Ä {offer['offer_id']}")

            # log.msg.info(f"–ü—Ä–æ–±—É–µ–º –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ª–∫—é—á–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤ —É –ø–∞—Ä—Ç–Ω–µ—Ä–∞ {ticket['partner']}")

            db_partners_list = db.get_partners_id()
            if len(good_connect_offers_list) > 0:
                if ticket['partner'] in db_partners_list:
                    novoreg_status = db.get_novoreg_status(ticket['partner'], 'connect_offers')
                    if novoreg_status is None:
                        db.set_novoreg_status(ticket['partner'], 'connect_offers', 'True')
                        tg_send_info(ticket, good_connect_offers_list, frod_msg=True)
                    else:
                        tg_send_info(ticket, good_connect_offers_list, frod_msg=False)
                else:
                    tg_send_info(ticket, good_connect_offers_list, frod_msg=False)

    except Exception as err:
        log.msg.error(f'–ü–æ–ª—É—á–∏–ª–∏ –æ—à–∏–±–∫—É: {err}')
